"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_aics_web_3d_viewer"] = self["webpackChunk_aics_web_3d_viewer"] || []).push([["node_modules_geotiff_dist-module_compression_lzw_js"],{

/***/ "./node_modules/geotiff/dist-module/compression/lzw.js":
/*!*************************************************************!*\
  !*** ./node_modules/geotiff/dist-module/compression/lzw.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ LZWDecoder)\n/* harmony export */ });\n/* harmony import */ var _basedecoder_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./basedecoder.js */ \"./node_modules/geotiff/dist-module/compression/basedecoder.js\");\n\n\nconst MIN_BITS = 9;\nconst CLEAR_CODE = 256; // clear code\nconst EOI_CODE = 257; // end of information\nconst MAX_BYTELENGTH = 12;\n\nfunction getByte(array, position, length) {\n  const d = position % 8;\n  const a = Math.floor(position / 8);\n  const de = 8 - d;\n  const ef = (position + length) - ((a + 1) * 8);\n  let fg = (8 * (a + 2)) - (position + length);\n  const dg = ((a + 2) * 8) - position;\n  fg = Math.max(0, fg);\n  if (a >= array.length) {\n    console.warn('ran off the end of the buffer before finding EOI_CODE (end on input code)');\n    return EOI_CODE;\n  }\n  let chunk1 = array[a] & ((2 ** (8 - d)) - 1);\n  chunk1 <<= (length - de);\n  let chunks = chunk1;\n  if (a + 1 < array.length) {\n    let chunk2 = array[a + 1] >>> fg;\n    chunk2 <<= Math.max(0, (length - dg));\n    chunks += chunk2;\n  }\n  if (ef > 8 && a + 2 < array.length) {\n    const hi = ((a + 3) * 8) - (position + length);\n    const chunk3 = array[a + 2] >>> hi;\n    chunks += chunk3;\n  }\n  return chunks;\n}\n\nfunction appendReversed(dest, source) {\n  for (let i = source.length - 1; i >= 0; i--) {\n    dest.push(source[i]);\n  }\n  return dest;\n}\n\nfunction decompress(input) {\n  const dictionaryIndex = new Uint16Array(4093);\n  const dictionaryChar = new Uint8Array(4093);\n  for (let i = 0; i <= 257; i++) {\n    dictionaryIndex[i] = 4096;\n    dictionaryChar[i] = i;\n  }\n  let dictionaryLength = 258;\n  let byteLength = MIN_BITS;\n  let position = 0;\n\n  function initDictionary() {\n    dictionaryLength = 258;\n    byteLength = MIN_BITS;\n  }\n  function getNext(array) {\n    const byte = getByte(array, position, byteLength);\n    position += byteLength;\n    return byte;\n  }\n  function addToDictionary(i, c) {\n    dictionaryChar[dictionaryLength] = c;\n    dictionaryIndex[dictionaryLength] = i;\n    dictionaryLength++;\n    return dictionaryLength - 1;\n  }\n  function getDictionaryReversed(n) {\n    const rev = [];\n    for (let i = n; i !== 4096; i = dictionaryIndex[i]) {\n      rev.push(dictionaryChar[i]);\n    }\n    return rev;\n  }\n\n  const result = [];\n  initDictionary();\n  const array = new Uint8Array(input);\n  let code = getNext(array);\n  let oldCode;\n  while (code !== EOI_CODE) {\n    if (code === CLEAR_CODE) {\n      initDictionary();\n      code = getNext(array);\n      while (code === CLEAR_CODE) {\n        code = getNext(array);\n      }\n\n      if (code === EOI_CODE) {\n        break;\n      } else if (code > CLEAR_CODE) {\n        throw new Error(`corrupted code at scanline ${code}`);\n      } else {\n        const val = getDictionaryReversed(code);\n        appendReversed(result, val);\n        oldCode = code;\n      }\n    } else if (code < dictionaryLength) {\n      const val = getDictionaryReversed(code);\n      appendReversed(result, val);\n      addToDictionary(oldCode, val[val.length - 1]);\n      oldCode = code;\n    } else {\n      const oldVal = getDictionaryReversed(oldCode);\n      if (!oldVal) {\n        throw new Error(`Bogus entry. Not in dictionary, ${oldCode} / ${dictionaryLength}, position: ${position}`);\n      }\n      appendReversed(result, oldVal);\n      result.push(oldVal[oldVal.length - 1]);\n      addToDictionary(oldCode, oldVal[oldVal.length - 1]);\n      oldCode = code;\n    }\n\n    if (dictionaryLength + 1 >= (2 ** byteLength)) {\n      if (byteLength === MAX_BYTELENGTH) {\n        oldCode = undefined;\n      } else {\n        byteLength++;\n      }\n    }\n    code = getNext(array);\n  }\n  return new Uint8Array(result);\n}\n\nclass LZWDecoder extends _basedecoder_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  decodeBlock(buffer) {\n    return decompress(buffer, false).buffer;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZ2VvdGlmZi9kaXN0LW1vZHVsZS9jb21wcmVzc2lvbi9sencuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMkM7O0FBRTNDO0FBQ0Esd0JBQXdCO0FBQ3hCLHNCQUFzQjtBQUN0Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxrQ0FBa0MsUUFBUTtBQUMxQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsVUFBVTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixZQUFZO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsUUFBUTtBQUNSLHNEQUFzRCxLQUFLO0FBQzNELFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsMkRBQTJELFNBQVMsSUFBSSxpQkFBaUIsY0FBYyxTQUFTO0FBQ2hIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWUseUJBQXlCLHVEQUFXO0FBQ25EO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGFpY3Mvd2ViLTNkLXZpZXdlci8uL25vZGVfbW9kdWxlcy9nZW90aWZmL2Rpc3QtbW9kdWxlL2NvbXByZXNzaW9uL2x6dy5qcz9jYTQzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCYXNlRGVjb2RlciBmcm9tICcuL2Jhc2VkZWNvZGVyLmpzJztcblxuY29uc3QgTUlOX0JJVFMgPSA5O1xuY29uc3QgQ0xFQVJfQ09ERSA9IDI1NjsgLy8gY2xlYXIgY29kZVxuY29uc3QgRU9JX0NPREUgPSAyNTc7IC8vIGVuZCBvZiBpbmZvcm1hdGlvblxuY29uc3QgTUFYX0JZVEVMRU5HVEggPSAxMjtcblxuZnVuY3Rpb24gZ2V0Qnl0ZShhcnJheSwgcG9zaXRpb24sIGxlbmd0aCkge1xuICBjb25zdCBkID0gcG9zaXRpb24gJSA4O1xuICBjb25zdCBhID0gTWF0aC5mbG9vcihwb3NpdGlvbiAvIDgpO1xuICBjb25zdCBkZSA9IDggLSBkO1xuICBjb25zdCBlZiA9IChwb3NpdGlvbiArIGxlbmd0aCkgLSAoKGEgKyAxKSAqIDgpO1xuICBsZXQgZmcgPSAoOCAqIChhICsgMikpIC0gKHBvc2l0aW9uICsgbGVuZ3RoKTtcbiAgY29uc3QgZGcgPSAoKGEgKyAyKSAqIDgpIC0gcG9zaXRpb247XG4gIGZnID0gTWF0aC5tYXgoMCwgZmcpO1xuICBpZiAoYSA+PSBhcnJheS5sZW5ndGgpIHtcbiAgICBjb25zb2xlLndhcm4oJ3JhbiBvZmYgdGhlIGVuZCBvZiB0aGUgYnVmZmVyIGJlZm9yZSBmaW5kaW5nIEVPSV9DT0RFIChlbmQgb24gaW5wdXQgY29kZSknKTtcbiAgICByZXR1cm4gRU9JX0NPREU7XG4gIH1cbiAgbGV0IGNodW5rMSA9IGFycmF5W2FdICYgKCgyICoqICg4IC0gZCkpIC0gMSk7XG4gIGNodW5rMSA8PD0gKGxlbmd0aCAtIGRlKTtcbiAgbGV0IGNodW5rcyA9IGNodW5rMTtcbiAgaWYgKGEgKyAxIDwgYXJyYXkubGVuZ3RoKSB7XG4gICAgbGV0IGNodW5rMiA9IGFycmF5W2EgKyAxXSA+Pj4gZmc7XG4gICAgY2h1bmsyIDw8PSBNYXRoLm1heCgwLCAobGVuZ3RoIC0gZGcpKTtcbiAgICBjaHVua3MgKz0gY2h1bmsyO1xuICB9XG4gIGlmIChlZiA+IDggJiYgYSArIDIgPCBhcnJheS5sZW5ndGgpIHtcbiAgICBjb25zdCBoaSA9ICgoYSArIDMpICogOCkgLSAocG9zaXRpb24gKyBsZW5ndGgpO1xuICAgIGNvbnN0IGNodW5rMyA9IGFycmF5W2EgKyAyXSA+Pj4gaGk7XG4gICAgY2h1bmtzICs9IGNodW5rMztcbiAgfVxuICByZXR1cm4gY2h1bmtzO1xufVxuXG5mdW5jdGlvbiBhcHBlbmRSZXZlcnNlZChkZXN0LCBzb3VyY2UpIHtcbiAgZm9yIChsZXQgaSA9IHNvdXJjZS5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgIGRlc3QucHVzaChzb3VyY2VbaV0pO1xuICB9XG4gIHJldHVybiBkZXN0O1xufVxuXG5mdW5jdGlvbiBkZWNvbXByZXNzKGlucHV0KSB7XG4gIGNvbnN0IGRpY3Rpb25hcnlJbmRleCA9IG5ldyBVaW50MTZBcnJheSg0MDkzKTtcbiAgY29uc3QgZGljdGlvbmFyeUNoYXIgPSBuZXcgVWludDhBcnJheSg0MDkzKTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPD0gMjU3OyBpKyspIHtcbiAgICBkaWN0aW9uYXJ5SW5kZXhbaV0gPSA0MDk2O1xuICAgIGRpY3Rpb25hcnlDaGFyW2ldID0gaTtcbiAgfVxuICBsZXQgZGljdGlvbmFyeUxlbmd0aCA9IDI1ODtcbiAgbGV0IGJ5dGVMZW5ndGggPSBNSU5fQklUUztcbiAgbGV0IHBvc2l0aW9uID0gMDtcblxuICBmdW5jdGlvbiBpbml0RGljdGlvbmFyeSgpIHtcbiAgICBkaWN0aW9uYXJ5TGVuZ3RoID0gMjU4O1xuICAgIGJ5dGVMZW5ndGggPSBNSU5fQklUUztcbiAgfVxuICBmdW5jdGlvbiBnZXROZXh0KGFycmF5KSB7XG4gICAgY29uc3QgYnl0ZSA9IGdldEJ5dGUoYXJyYXksIHBvc2l0aW9uLCBieXRlTGVuZ3RoKTtcbiAgICBwb3NpdGlvbiArPSBieXRlTGVuZ3RoO1xuICAgIHJldHVybiBieXRlO1xuICB9XG4gIGZ1bmN0aW9uIGFkZFRvRGljdGlvbmFyeShpLCBjKSB7XG4gICAgZGljdGlvbmFyeUNoYXJbZGljdGlvbmFyeUxlbmd0aF0gPSBjO1xuICAgIGRpY3Rpb25hcnlJbmRleFtkaWN0aW9uYXJ5TGVuZ3RoXSA9IGk7XG4gICAgZGljdGlvbmFyeUxlbmd0aCsrO1xuICAgIHJldHVybiBkaWN0aW9uYXJ5TGVuZ3RoIC0gMTtcbiAgfVxuICBmdW5jdGlvbiBnZXREaWN0aW9uYXJ5UmV2ZXJzZWQobikge1xuICAgIGNvbnN0IHJldiA9IFtdO1xuICAgIGZvciAobGV0IGkgPSBuOyBpICE9PSA0MDk2OyBpID0gZGljdGlvbmFyeUluZGV4W2ldKSB7XG4gICAgICByZXYucHVzaChkaWN0aW9uYXJ5Q2hhcltpXSk7XG4gICAgfVxuICAgIHJldHVybiByZXY7XG4gIH1cblxuICBjb25zdCByZXN1bHQgPSBbXTtcbiAgaW5pdERpY3Rpb25hcnkoKTtcbiAgY29uc3QgYXJyYXkgPSBuZXcgVWludDhBcnJheShpbnB1dCk7XG4gIGxldCBjb2RlID0gZ2V0TmV4dChhcnJheSk7XG4gIGxldCBvbGRDb2RlO1xuICB3aGlsZSAoY29kZSAhPT0gRU9JX0NPREUpIHtcbiAgICBpZiAoY29kZSA9PT0gQ0xFQVJfQ09ERSkge1xuICAgICAgaW5pdERpY3Rpb25hcnkoKTtcbiAgICAgIGNvZGUgPSBnZXROZXh0KGFycmF5KTtcbiAgICAgIHdoaWxlIChjb2RlID09PSBDTEVBUl9DT0RFKSB7XG4gICAgICAgIGNvZGUgPSBnZXROZXh0KGFycmF5KTtcbiAgICAgIH1cblxuICAgICAgaWYgKGNvZGUgPT09IEVPSV9DT0RFKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfSBlbHNlIGlmIChjb2RlID4gQ0xFQVJfQ09ERSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYGNvcnJ1cHRlZCBjb2RlIGF0IHNjYW5saW5lICR7Y29kZX1gKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IHZhbCA9IGdldERpY3Rpb25hcnlSZXZlcnNlZChjb2RlKTtcbiAgICAgICAgYXBwZW5kUmV2ZXJzZWQocmVzdWx0LCB2YWwpO1xuICAgICAgICBvbGRDb2RlID0gY29kZTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGNvZGUgPCBkaWN0aW9uYXJ5TGVuZ3RoKSB7XG4gICAgICBjb25zdCB2YWwgPSBnZXREaWN0aW9uYXJ5UmV2ZXJzZWQoY29kZSk7XG4gICAgICBhcHBlbmRSZXZlcnNlZChyZXN1bHQsIHZhbCk7XG4gICAgICBhZGRUb0RpY3Rpb25hcnkob2xkQ29kZSwgdmFsW3ZhbC5sZW5ndGggLSAxXSk7XG4gICAgICBvbGRDb2RlID0gY29kZTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3Qgb2xkVmFsID0gZ2V0RGljdGlvbmFyeVJldmVyc2VkKG9sZENvZGUpO1xuICAgICAgaWYgKCFvbGRWYWwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBCb2d1cyBlbnRyeS4gTm90IGluIGRpY3Rpb25hcnksICR7b2xkQ29kZX0gLyAke2RpY3Rpb25hcnlMZW5ndGh9LCBwb3NpdGlvbjogJHtwb3NpdGlvbn1gKTtcbiAgICAgIH1cbiAgICAgIGFwcGVuZFJldmVyc2VkKHJlc3VsdCwgb2xkVmFsKTtcbiAgICAgIHJlc3VsdC5wdXNoKG9sZFZhbFtvbGRWYWwubGVuZ3RoIC0gMV0pO1xuICAgICAgYWRkVG9EaWN0aW9uYXJ5KG9sZENvZGUsIG9sZFZhbFtvbGRWYWwubGVuZ3RoIC0gMV0pO1xuICAgICAgb2xkQ29kZSA9IGNvZGU7XG4gICAgfVxuXG4gICAgaWYgKGRpY3Rpb25hcnlMZW5ndGggKyAxID49ICgyICoqIGJ5dGVMZW5ndGgpKSB7XG4gICAgICBpZiAoYnl0ZUxlbmd0aCA9PT0gTUFYX0JZVEVMRU5HVEgpIHtcbiAgICAgICAgb2xkQ29kZSA9IHVuZGVmaW5lZDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGJ5dGVMZW5ndGgrKztcbiAgICAgIH1cbiAgICB9XG4gICAgY29kZSA9IGdldE5leHQoYXJyYXkpO1xuICB9XG4gIHJldHVybiBuZXcgVWludDhBcnJheShyZXN1bHQpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMWldEZWNvZGVyIGV4dGVuZHMgQmFzZURlY29kZXIge1xuICBkZWNvZGVCbG9jayhidWZmZXIpIHtcbiAgICByZXR1cm4gZGVjb21wcmVzcyhidWZmZXIsIGZhbHNlKS5idWZmZXI7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/geotiff/dist-module/compression/lzw.js\n");

/***/ })

}]);